#!/usr/bin/env python3

import argparse
import os
from subprocess import Popen, PIPE


parser = argparse.ArgumentParser(description='Generate PC debug info')

parser.add_argument("--input", dest="input", default=None, help="Specify trace input file")
parser.add_argument("--output", dest="output", default=None, help="Specify trace output file")
parser.add_argument("--binary", dest="binaries", default=[], action="append", help="Specify binary file")

args = parser.parse_args()

debug_info = {}

for binary in args.binaries:

  if os.system('pulp-pc-info --file %s --all-file %s' % (binary, binary + '.debugInfo')) != 0:
      raise Exception('Error while generating debug symbols information, make sure the toolchain and the binaries are accessible ')

  with open(binary + '.debugInfo') as f:
    for line in f.readlines():
      line = line.split()
      debug_info[line[0]] = line

with open(args.output, 'w') as output_file:
  with open(args.input) as f:
      for line in f.readlines()[1:]:
        line = line.strip('\n').split()
        pc = line[3]
        debug_str = '-'
        debug = debug_info.get(pc)
        if debug is not None:
          debug_str = '%s:%s' % (debug[1], debug[4])
        
        line.insert(3, debug_str)
        output_file.write('%15s %s %10s %-30s %10s %10s %10s %s\n' % (line[0], line[1], line[2], line[3], line[4], line[5], line[6], '\t'.join(line[7:])))