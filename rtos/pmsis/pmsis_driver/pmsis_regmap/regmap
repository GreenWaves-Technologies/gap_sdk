#!/usr/bin/env python3

#
# Copyright (C) 2018 ETH Zurich, University of Bologna
# and GreenWaves Technologies
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Authors: Germain Haugou, ETH (germain.haugou@iis.ee.ethz.ch)

import argparse
import collections
import regmap as rmap
import cmdmap as cmap
import regmap_xls
import regmap_json
import regmap_c_header
import regmap_rst

 
parser = argparse.ArgumentParser(description='Manages register map')

parser.add_argument(
    "--input-xls", dest="input_xls", default=None,
    help="Specify input XLS file"
)

parser.add_argument(
    "--udma-ip-type", dest="udma_ip_type", default=None,
    help="Specify the udma_ip type"
)

parser.add_argument(
    "--input-json", dest="input_json", default=None,
    help="Specify input JSON file"
)

parser.add_argument(
    "--table", dest="table", action="store_true",
    help="Dump register map as a table in the terminal"
)

parser.add_argument(
    "--header", dest="header", default=None,
    help="Dump register map into a C header file"
)

parser.add_argument(
    "--rst", dest="rst", default=None,
    help="Dump register map into an rst file"
)

parser.add_argument(
    "--json", dest="json", default=None,
    help="Dump register map into a JSON file"
)

parser.add_argument(
    "--name", dest="name", default="regmap",
    help="Specifies register map name"
)

args = parser.parse_args()



regmap = rmap.Regmap(args.name)
cmdmap = cmap.Cmdmap(args.name)

if args.input_xls is not None:
    regmap_xls.import_xls(regmap, cmdmap, args.input_xls)

if args.input_json is not None:
    regmap_json.import_json_file(regmap, args.input_json)

if args.table:
    regmap.dump_to_table(dump_regfields=True)

if args.rst:
    regmap_rst.dump_to_rst(regmap=regmap, name=args.name, rst_path=args.rst)

if args.json:
    regmap_json.dump_to_json(regmap=regmap, name=args.name, json_path=args.json)

if args.header:
    if args.input_xls is not None:
        regmap_c_header.dump_to_header(regmap=regmap, cmdmap=cmdmap, name=args.name, header_path=args.header, udma_ip_type=args.udma_ip_type)
