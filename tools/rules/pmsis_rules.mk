BOARD_NAME ?= gapuino
PMSIS_OS ?= pulpos

ifeq ($(BOARD_NAME), gapoc_a)
COMMON_CFLAGS          += -DCONFIG_GAPOC_A
PLPBRIDGE_FLAGS        += -ftdi

else ifeq ($(BOARD_NAME), gapoc_b)
COMMON_CFLAGS          += -DCONFIG_GAPOC_B
PLPBRIDGE_FLAGS        += -ftdi

else ifeq ($(BOARD_NAME), gapuino)
COMMON_CFLAGS          += -DCONFIG_GAPUINO

else ifeq ($(BOARD_NAME), ai_deck)
COMMON_CFLAGS          += -DCONFIG_AI_DECK
endif				# BOARD_NAME

ifdef RUNNER_CONFIG
override runner_args += --config-user=$(RUNNER_CONFIG)
endif

ifdef runner_args
export GVSOC_OPTIONS=$(runner_args)
endif

ifeq '$(PMSIS_OS)' 'freertos'

# Select PMSIS drivers
ifeq ($(TARGET_CHIP), GAP9)
NO_PMSIS_BSP             = true
endif				# TARGET_CHIP

ifndef NO_PMSIS_BSP
ifeq ($(GAP_SDK_HOME), )
PMSIS_BSP_DIR            = $(FREERTOS_PATH)/vendors/gwt/TARGET_GWT/pmsis/bsp
else
PMSIS_BSP_DIR            = $(GAP_SDK_HOME)/rtos/pmsis/pmsis_bsp
endif				# GAP_SDK_HOME


include $(PMSIS_BSP_DIR)/rules/freertos_bsp_rules.mk

# Special flag for FreeRTOS to use semihosting.
ifeq ($(FS_TYPE), host)
io = host
endif				# FS_TYPE

endif				# NO_PMSIS_BSP

APP_SRC                  = $(APP_SRCS) $(PMSIS_BSP_SRCS)
APP_INC_PATH             = $(APP_INC) $(PMSIS_BSP_INC)
APP_LIBSFLAGS            = $(APP_LDFLAGS)
FREERTOS_FLAGS          += $(APP_CFLAGS) $(COMMON_CFLAGS) -D__USE_TCDM_MALLOC__=1 -DPMSIS_DRIVERS=1

#$(info ## FreeRTOS app sources : $(APP_SRC))
#$(info ## FreeRTOS app includes : $(APP_INC_PATH))
#$(info ## FreeRTOS flags : $(FREERTOS_FLAGS))
#$(info ## FreeRTOS libsflags : $(APP_LIBSFLAGS))

include $(GAP_SDK_HOME)/tools/rules/freeRTOS_rules.mk

else

ifeq '$(PMSIS_OS)' 'mbed'

TEST_C          = $(SRCS)
MBED_FLAGS     += -DMBED_CONF_RTOS_PRESENT=1

include $(GAP_SDK_HOME)/tools/rules/mbed_rules.mk

else

ifeq '$(PMSIS_OS)' 'zephyr'

include $(GAP_SDK_HOME)/tools/rules/zephyr_rules.mk

else

PULP_APP = $(APP)
PULP_APP_FC_SRCS = $(APP_SRCS)
PULP_APP_INC_PATH    += $(APP_INC)

PULP_CFLAGS = $(APP_CFLAGS) $(COMMON_CFLAGS)
LIBS += $(APP_LDFLAGS) $(COMMON_LDFLAGS)
ifdef USE_PMSIS_TOOLS
PULP_LDFLAGS += -lpitools
endif

include $(GAP_SDK_HOME)/tools/rules/pulp_rules.mk

endif

endif

endif

#
# ReadFS
#

# run_gapuino legacy: convert BRIDGE files to readfs makefile input 
READFS_FILES ?= $(filter-out -%, $(PLPBRIDGE_FLAGS))

include $(GAP_SDK_HOME)/tools/gapy/rules/readfs.mk

#
# Littlefs
#

include $(GAP_SDK_HOME)/tools/gapy/rules/littlefs.mk

#
# Flash tools
#
include $(GAP_SDK_HOME)/tools/gapy/rules/flash.mk

# TODO temporary work-around to prevent gvsoc from generating flash as it is
# now generated by gapy.
override runner_args += --config-opt **/flash/preload_file=$(FLASH_IMAGE) \
	--config-opt=**/runner/boot_from_flash=false
