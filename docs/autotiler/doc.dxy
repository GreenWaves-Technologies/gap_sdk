# Doxyfile 1.8.6

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.
#
# All text after a double hash (##) is considered a comment and is placed in
# front of the TAG it is preceding.
#
# All text after a single hash (#) is considered a comment and will be ignored.
# The format is:
# TAG = value [value, ...]
# For lists, items can also be appended using:
# TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (\" \").

#---------------------------------------------------------------------------
# Project related configuration options
#---------------------------------------------------------------------------

# This tag specifies the encoding used for all characters in the config file
# that follow. The default is UTF-8 which is also the encoding used for all text
# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv
# built into libc) for the transcoding. See http://www.gnu.org/software/libiconv
# for the list of possible encodings.
# The default value is: UTF-8.

@INCLUDE = $(DOXTEMPLATE)/pulp-rt/pulp-rt.dxy

PROJECT_NAME           =

PROJECT_NUMBER         = "Version 1.0"

PROJECT_BRIEF          = "Auto Tiler Library"

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path
# into which the generated documentation will be written. If a relative path is
# entered, it will be relative to the location where doxygen was started. If
# left blank the current directory will be used.

OUTPUT_DIRECTORY       = $(BUILD_DIR)/AUTOTILER

# The INPUT tag is used to specify the files and/or directories that contain
# documented source files. You may enter file names like myfile.cpp or
# directories like /usr/src/myproject. Separate the files or directories with
# spaces.
# Note: If this tag is empty the current directory is searched.

INPUT        = $(AUTOTILER_SRC)/include/AutoTilerLib.h $(AUTOTILER_SRC)/include/AutoTilerLibTypes.h

INPUT		 += $(AUTOTILER_GENERATOR_SRC)/FFT2D/kernels/include/FFTBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/FFT2D/generator/include/FFT2DGenerator.h $(AUTOTILER_EXAMPLES_SRC)/FFT2DModel/FFT2DModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/IntegralImg/kernels/include/IntegralImgBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/IntegralImg/generator/include/IntegralImgGenerator.h $(AUTOTILER_EXAMPLES_SRC)/IntegralImage/IntegralImgModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/MatAdd/kernels/include/MatAddBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/MatAdd/generator/include/MatAddGenerator.h $(AUTOTILER_EXAMPLES_SRC)/MatrixAdd/MatAddModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/MatMult/kernels/include/MatMultBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/MatMult/generator/include/MatMultGenerator.h $(AUTOTILER_EXAMPLES_SRC)/MatMult/MatMultModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/Resize/kernels/include/ResizeBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/Resize/generator/include/ResizeGenerator.h $(AUTOTILER_EXAMPLES_SRC)/BilinearResize/ResizeModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/HoG/kernels/include/HoGBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/HoG/generator/include/HoGGenerator.h $(AUTOTILER_EXAMPLES_SRC)/HoG/HoGModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/Fir/kernels/include/FirBasicKernels.h $(AUTOTILER_GENERATOR_SRC)/Fir/generator/include/FirGenerator.h $(AUTOTILER_EXAMPLES_SRC)/Fir/FirModel.c
INPUT		 += $(AUTOTILER_GENERATOR_SRC)/CNN/kernels/include/CNN_BasicKernels.h $(AUTOTILER_GENERATOR_SRC)/CNN/kernels/include/CNN_HwCE.h $(AUTOTILER_GENERATOR_SRC)/CNN/generator/include/CNN_Generators.h


INPUT        += $(AT_BASE)/groups.h $(BUILD_DIR)/AUTOTILER/mainpage.md

@INCLUDE = $(COM_BASE)/common.dxy

HTML_EXTRA_FILES       += $(BUILD_DIR)/AUTOTILER/images.css
